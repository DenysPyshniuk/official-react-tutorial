{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","style","winner","backgroundColor","value","Board","i","this","includes","squares","n","push","renderSquare","renderSquares","renderRows","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","moves","map","move","desc","jumpTo","window","location","reload","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57b1bf92.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction Square(props) {\n  const winningSquareStyle = {\n    backgroundColor: \"green\",\n  };\n\n  return (\n    <button\n      className=\"square\"\n      onClick={props.onClick}\n      style={props.winner ? winningSquareStyle : null}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    let winner =\n      this.props.winner && this.props.winner.includes(i) ? true : false;\n    return (\n      <Square\n        key={\"square \" + i}\n        squares={this.props.squares}\n        winner={winner}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  renderSquares(n) {\n    let squares = [];\n    for (let i = n; i < n + 3; i++) {\n      squares.push(this.renderSquare(i));\n    }\n    return squares;\n  }\n\n  renderRows(i) {\n    return <div className=\"board-row\"> {this.renderSquares(i)}</div>;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderRows(0)}\n        {this.renderRows(3)}\n        {this.renderRows(6)}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n        },\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n        },\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n\n      return (\n        <li key={move}>\n          <button className=\"moves\" onClick={() => this.jumpTo(move)}>\n            {move === this.state.stepNumber ? <b>{desc}</b> : desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = \"Winner is player: \" + (this.state.xIsNext ? \"O\" : \"X\");\n    }\n    if (!winner && this.state.stepNumber === 9) {\n      status = \"DRAW! Play again!\";\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"name\">\n          <h1>Tic Tac Toe</h1>\n          <button\n            className=\"name-button\"\n            onClick={() => window.location.reload()}\n          >\n            new game\n          </button>\n        </div>\n        <div className=\"game-board\">\n          <Board\n            winner={winner}\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          {status ? (\n            <div className=\"status\">{status}</div>\n          ) : (\n            <div className=\"no-status\">{status}</div>\n          )}\n          <div className=\"move-list\">\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return lines[i];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}